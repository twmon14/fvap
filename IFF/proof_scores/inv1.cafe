--> I) Base case
--> init
open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	red inv1(init,a,b,c,k,r1) .
close

--> II) Induction cases
--> 1. fkcm1(s,d,e,r2)
open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Rand .
	eq (r2 \in rands(nw(s))) = true .
	red inv1(s,a,b,c,k,r1) implies inv1(fkcm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Rand .
	eq (r2 \in rands(nw(s))) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(fkcm1(s,d,e,r2),a,b,c,k,r1) .
close

--> 2. fkrm1(s,d,e,r2)
open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq d = b .
  	eq e = c .
  	eq k(r2) = k .
  	eq r1(r2) = r1 .
  	eq p(r2) = b .

  	eq k = k(enemy) .
  	red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq d = b .
  	eq e = c .
  	eq k(r2) = k .
  	eq r1(r2) = r1 .
  	eq p(r2) = b .

  	eq (k = k(enemy)) = false .
  	eq b = enemy .
  	eq enc(k,r1,enemy) \in ciphers(nw(s)) = true .
  	red inv2(s,k,r1)
    implies inv1(s,a,b,c,k,r1)
    implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq d = b .
  	eq e = c .
  	eq k(r2) = k .
  	eq r1(r2) = r1 .
  	eq p(r2) = b .

  	eq (k = k(enemy)) = false .
  	eq b = enemy .
  	eq enc(k,r1,enemy) \in ciphers(nw(s)) = false .
  	red lm1(r2,enc(k,r1,enemy),ciphers(nw(s)))
    implies inv1(s,a,b,c,k,r1)
    implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq d = b .
  	eq e = c .
  	eq k(r2) = k .
  	eq r1(r2) = r1 .
  	eq p(r2) = b .

  	eq (k = k(enemy)) = false .
  	eq (b = enemy) = false .
  	red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq d = b .
  	eq e = c .
  	eq k(r2) = k .
  	eq r1(r2) = r1 .
  	eq (p(r2) = b) = false .
  	red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq d = b .
  	eq e = c .
  	eq k(r2) = k .
  	eq (r1(r2) = r1) = false .
  	red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq d = b .
  	eq e = c .
  	eq (k(r2) = k) = false .
  	red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq d = b .
  	eq (e = c) = false .
  	red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq a = enemy .
  	eq (d = b) = false .
  	red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = true .
  	eq (a = enemy) = false .
  	red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Cipher .
  	eq r2 \in ciphers(nw(s)) = false .
  red inv1(s,a,b,c,k,r1) implies inv1(fkrm1(s,d,e,r2),a,b,c,k,r1) .
close

--> 3. fkrm2(s,d,e,r2)
open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Rand .
	eq (r2 \in rands(nw(s))) = true .
	eq b = enemy .
	eq k(enemy) = k .
	red inv1(s,a,b,c,k,r1) implies inv1(fkrm2(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Rand .
	eq (r2 \in rands(nw(s))) = true .
	eq b = enemy .
	eq (k(enemy) = k) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(fkrm2(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Rand .
	eq (r2 \in rands(nw(s))) = true .
	eq (b = enemy) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(fkrm2(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Rand .
	eq (r2 \in rands(nw(s))) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(fkrm2(s,d,e,r2),a,b,c,k,r1) .
close

--> 4. sdcm(s,d,e,r2)
open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Rand .
	eq (r2 \in ur(s)) = true .
	red inv1(s,a,b,c,k,r1) implies inv1(sdcm(s,d,e,r2),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Prin .
	op r2 : -> Rand .
	eq (r2 \in ur(s)) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdcm(s,d,e,r2),a,b,c,k,r1) .
close

--> 5. sdrm(s,d,e,r2)
open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = true .
	eq d = dst(e) .

  	eq a = dst(e) .
  	eq c = src(e) .
  	eq k = k(dst(e)) .
  	eq r1 = r1(e) .
  	eq b = dst(e) .

  	eq dst(e) = enemy .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = true .
	eq d = dst(e) .

  	eq a = dst(e) .
  	eq c = src(e) .
  	eq k = k(dst(e)) .
  	eq r1 = r1(e) .
  	eq b = dst(e) .

  	eq (dst(e) = enemy) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = true .
	eq d = dst(e) .

  	eq a = dst(e) .
  	eq c = src(e) .
  	eq k = k(dst(e)) .
  	eq r1 = r1(e) .
  	eq (b = dst(e)) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = true .
	eq d = dst(e) .

  	eq a = dst(e) .
  	eq c = src(e) .
  	eq k = k(dst(e)) .
  	eq (r1 = r1(e)) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = true .
	eq d = dst(e) .

  	eq a = dst(e) .
  	eq c = src(e) .
  	eq (k = k(dst(e))) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = true .
	eq d = dst(e) .

  	eq a = dst(e) .
  	eq (c = src(e)) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = true .
	eq d = dst(e) .

  	eq (a = dst(e)) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = true .
	eq (d = dst(e)) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = true .
	eq (e \in nw(s)) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close

open IFF .
	op a : -> Prin .
	op b : -> Prin .
	op c : -> Prin .
	op s : -> Sys .
	op k : -> Key .
	op r1 : -> Rand .
	op d : -> Prin .
	op e : -> Msg .
	eq cm?(e) = false .
	red inv1(s,a,b,c,k,r1) implies inv1(sdrm(s,d,e),a,b,c,k,r1) .
close


